name: CI

on: [push, pull_request]

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:
      -   uses: actions/checkout@v2

      -   name: Build
          run: cargo build

      - name: Build (release)
        run: cargo build --release

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install xvfb
        run: sudo apt-get --yes install xvfb

      - name: Start X server and run tests
        run: xvfb-run --auto-servernum cargo test

      - name: Start X server and run tests in release mode
        run: xvfb-run --auto-servernum cargo test --release

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clippy
        run: cargo clippy

  fmt:
    name: Formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install nightly toolchain
        run: rustup install nightly

      - name: Install rustfmt
        run: rustup component add rustfmt --toolchain nightly

      - name: Formatting
        run: cargo +nightly fmt -- --check

  doc:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Documentation
        run: cargo doc

  build_features_disabled:
    name: Build (features disabled)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:
      -   uses: actions/checkout@v2

      -   name: Build (no features)
          run: cargo build --no-default-features

      -   name: Build (no features, release)
          run: cargo build --no-default-features --release

  test_features_disabled:
    name: Test (features disabled)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install xvfb
        run: sudo apt-get --yes install xvfb

      - name: Start X server and run tests
        run: xvfb-run --auto-servernum cargo test --no-default-features --lib --examples --tests

      - name: Start X server and run tests (release)
        run: xvfb-run --auto-servernum cargo test --release --no-default-features --lib --examples --tests